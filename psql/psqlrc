\set QUIET 1

-- Prompt
\set PROMPT1 '%[%033[1;32m%][%n@%M:%>]%[%033[1;36m%] [%`date "+%Y-%m-%d %H:%M:%S"`]%[%033[1;34m%] [%/]%[%033[0m%] > '
\set PROMPT2 '%[%033[1;33m%]%R >%[%033[0m%] '

-- Basic settings
\pset null [NULL]
\pset linestyle unicode
\pset border 2
\pset format wrapped
\x auto
\set VERBOSITY verbose
\set HISTFILE ~/.psql/history- :DBNAME
\set HISTCONTROL ignoredups
\set HISTSIZE 10000
\set ECHO_HIDDEN OFF
\set COMP_KEYWORD_CASE upper

-- Error handling
\set ON_ERROR_STOP on
\set ON_ERROR_ROLLBACK interactive

-- Enable timing by default
\timing

-- Set client encoding
\encoding unicode

\set QUIET 0

-- Welcome message
\echo '\nPostgreSQL ' :VERSION_NAME ' as of ' `date` '\n'

\echo 'Administrative queries:\n'
\echo '\t:settings\t-- Server Settings'
\echo '\t:conninfo\t-- Server connections'
\echo '\t:activity\t-- Server activity'
\echo '\t:locks\t\t-- Lock information'
\echo '\t:waits\t\t-- Waiting queries'
\echo '\t:dbsize\t\t-- Database sizes'
\echo '\t:tablesize\t-- Tables sizes'
\echo '\t:cache_hit\t-- Cache hit rates'
-- \echo '\t:index_usage\t-- Index usage rates'
\echo '\t:long_running\t-- Long running queries'
\echo '\t:ps\t\t-- Process statistics'
\echo '\t:uptime\t\t-- Server uptime'
\echo '\t:menu\t\t-- Show this menu'
\echo '\t\\h\t\t-- Help with SQL commands'
\echo '\t\\?\t\t-- Help with psql commands\n'

\echo 'Development queries:\n'
\echo '\t:sp\t\t-- Current search path'
\echo '\t:clear\t\t-- Clear screen'
\echo '\t:ll\t\t-- List directory'
-- \echo '\t:tableinfo\t-- Table information'
\echo '\t:extensions\t-- Installed extensions\n'

-- Administration queries
\set menu '\\i ~/.psqlrc'

\set settings 'SELECT name, setting, unit, context FROM pg_settings;'

\set conninfo 'SELECT usename, count(*) as count FROM pg_stat_activity GROUP BY usename;'

\set activity 'SELECT pid, usename, datname, query, state, query_start, xact_start, backend_start FROM pg_stat_activity WHERE state != \'idle\';'

\set locks 'SELECT blocked_locks.pid AS blocked_pid, blocked_activity.usename AS blocked_user, blocking_locks.pid AS blocking_pid, blocking_activity.usename AS blocking_user, blocked_activity.query AS blocked_statement FROM pg_catalog.pg_locks blocked_locks JOIN pg_catalog.pg_stat_activity blocked_activity ON blocked_locks.pid = blocked_activity.pid JOIN pg_catalog.pg_locks blocking_locks ON blocked_locks.locktype = blocking_locks.locktype AND blocked_locks.database IS NOT DISTINCT FROM blocking_locks.database AND blocked_locks.relation IS NOT DISTINCT FROM blocking_locks.relation AND blocked_locks.page IS NOT DISTINCT FROM blocking_locks.page AND blocked_locks.tuple IS NOT DISTINCT FROM blocking_locks.tuple AND blocked_locks.virtualxid IS NOT DISTINCT FROM blocking_locks.virtualxid AND blocked_locks.transactionid IS NOT DISTINCT FROM blocking_locks.transactionid AND blocked_locks.classid IS NOT DISTINCT FROM blocking_locks.classid AND blocked_locks.objid IS NOT DISTINCT FROM blocking_locks.objid AND blocked_locks.objsubid IS NOT DISTINCT FROM blocking_locks.objsubid AND blocked_locks.pid != blocking_locks.pid JOIN pg_catalog.pg_stat_activity blocking_activity ON blocking_locks.pid = blocking_activity.pid WHERE NOT blocked_locks.granted;'

\set waits 'SELECT pid, usename, state, wait_event_type, wait_event, query FROM pg_stat_activity WHERE wait_event IS NOT NULL;'

\set dbsize 'SELECT datname, pg_size_pretty(pg_database_size(datname)) as size FROM pg_database ORDER BY pg_database_size(datname) DESC;'

\set tablesize 'SELECT schemaname, tablename, pg_size_pretty(pg_total_relation_size(schemaname||\'.\'||tablename)) as total_size, pg_size_pretty(pg_table_size(schemaname||\'.\'||tablename)) as table_size, pg_size_pretty(pg_indexes_size(schemaname||\'.\'||tablename)) as index_size FROM pg_tables WHERE schemaname NOT IN (\'pg_catalog\', \'information_schema\') ORDER BY pg_total_relation_size(schemaname||\'.\'||tablename) DESC LIMIT 20;'

\set cache_hit 'SELECT sum(heap_blks_read) as heap_read, sum(heap_blks_hit) as heap_hit, CASE WHEN sum(heap_blks_hit) + sum(heap_blks_read) = 0 THEN \'0\' ELSE round(sum(heap_blks_hit) * 100::numeric / (sum(heap_blks_hit) + sum(heap_blks_read)), 2)::text END as ratio FROM pg_statio_user_tables;'

\set long_running 'SELECT pid, now() - query_start as duration, usename, query FROM pg_stat_activity WHERE state != \'idle\' AND query_start < now() - interval \'5 minutes\' ORDER BY duration DESC;'

\set ps 'SELECT pid, usename, client_addr, client_port, backend_start, query_start, state, wait_event_type, wait_event FROM pg_stat_activity WHERE state != \'idle\';'

\set uptime 'SELECT current_timestamp - pg_postmaster_start_time() as uptime;'

-- Development queries
\set sp 'SHOW search_path;'
\set clear '\\! clear;'
\set ll '\\! ls -lrt;'

\set extensions 'SELECT name, default_version, installed_version, comment FROM pg_available_extensions WHERE installed_version IS NOT NULL ORDER BY name;'

-- Set default footer
\pset footer on

